<?xml version="1.0" encoding="UTF-8"?>

<!-- log4j 默认是先加载 xml，然后再 propertites -->
<!-- 以下两种都可以使用 -->
<!--<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">-->
<!--<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/"-->
                     <!--debug="true">-->

<!DOCTYPE log4j:configuration SYSTEM "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
<log4j:configuration debug="true">

    <appender name="inLine" class="org.apache.log4j.ConsoleAppender">
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%d{dd/MM/yy hh:mm:ss:sss z}] %5p %c{2}: %m%n" />
        </layout>
        <!--过滤器设置输出的级别-->
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <!-- 设置日志输出的最小级别 -->
            <param name="levelMin" value="DEBUG" />
            <!-- 设置日志输出的最大级别 -->
            <param name="levelMax" value="ERROR" />
            <!-- 是否接受匹配，默认是false -->
            <param name="AcceptOnMatch" value="true" />
        </filter>
    </appender>

    <!-- 	<appender name="FILE" class="org.apache.log4j.RollingFileAppender"> -->
    <!-- 		<param name="file" value="${catalina.base}/logs/log.log" /> -->
    <!--        是否在已存在的文件追加写：默认时true，若为false则每次启动都会删除并重新新建文件 -->
    <!-- 		<param name="append" value="true" /> -->
    <!--        <param name="Threshold" value="INFO"/>-->
    <!-- 		<param name="maxFileSize" value="50MB" /> -->
    <!--        保存备份日志的最大个数，默认值是：1  -->
    <!-- 		<param name="maxBackupIndex" value="10" /> -->
    <!-- 		<layout class="org.apache.log4j.PatternLayout"> -->
    <!-- 			<param name="ConversionPattern" value="%d [%t] %-5p %C{6} (%F:%L) - %m%n" /> -->
    <!-- 		</layout> -->
    <!-- 	</appender> -->

    <!--<appender name="dailyRollingAppender" class="org.apache.log4j.DailyRollingFileAppender">-->
        <!--&lt;!&ndash; 文件文件全路径名 &ndash;&gt;-->
        <!--<param name="File" value="/data/applogs/own/dailyRollingAppender.log"/>-->
        <!--<param name="Append" value="true" />-->
        <!--&lt;!&ndash; 设置日志备份频率，默认：为每天一个日志文件 &ndash;&gt;-->
        <!--<param name="DatePattern" value="'.'yyyy-MM-dd'.log'" />-->

        <!--&lt;!&ndash;每分钟一个备份&ndash;&gt;-->
        <!--&lt;!&ndash;<param name="DatePattern" value="'.'yyyy-MM-dd-HH-mm'.log'" />&ndash;&gt;-->
        <!--<layout class="org.apache.log4j.PatternLayout">-->
            <!--<param name="ConversionPattern" value="[%p][%d{HH:mm:ss SSS}][%c]-[%m]%n"/>-->
        <!--</layout>-->
    <!--</appender>-->


    <!-- 	<appender name="framework" -->
    <!-- 		class="com.deppon.foss.framework.server.components.logger.BufferedAppender"> -->
    <!-- 		<layout class="org.apache.log4j.PatternLayout"> -->
    <!-- 			<param name="ConversionPattern" value="[%d{dd/MM/yy hh:mm:ss:sss z}] %5p %c{2}: %m%n" /> -->
    <!-- 		</layout> -->
    <!-- 	</appender> -->


    <!--
        下面是打印 mybatis语句的配置：
        1. 指定 logger的设置，additivity 是否遵循缺省的继承机制
        2. 当additivity="false"时，root中的配置就失灵了，不遵循缺省的继承机制
        3. 代码中使用Logger.getLogger("name")获得此输出器，且不会使用根输出器
    -->
    <logger name="com.ibatis" additivity="false">
        <level value="DEBUG" />
    </logger>

    <logger name="java.sql.Connection" additivity="false">
        <level value="DEBUG" />
    </logger>

    <logger name="java.sql.Statement" additivity="false">
        <level value="DEBUG" />
    </logger>

    <logger name="java.sql.PreparedStatement" additivity="false">
        <level value="DEBUG" />
    </logger>

    <logger name="java.sql.ResultSet" additivity="false">
        <level value="DEBUG" />
    </logger>

    <root>
        <level value="DEBUG" />
        <appender-ref ref="inLine" />
        <!-- 		<appender-ref ref="FILE" /> -->
        <!-- 		<appender-ref ref="framework" /> -->
    </root>
</log4j:configuration>