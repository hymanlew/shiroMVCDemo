#Config

log4j.debug=true

#level, appenderName1, appenderName2,
log4j.rootLogger=INFO,inLine,console

log4j.logger.org.springframework=ERROR
log4j.logger.hyman=debug

# General Apache libraries
log4j.logger.org.apache=debug

# Default Shiro logging，追踪信息并输出
#log4j.logger.org.apache.shiro=TRACE

# 输出 sql 结果集，但是 mybatis 结合其他框架时，只能使用 xml 配置才能显示
log4j.logger.org.apache.ibatis.logging.jdbc.PreparedStatementLogger=debug
log4j.logger.org.apache.ibatis.logging=debug
log4j.logger.org.apache.ibatis.jdbc.ScriptRunner=debug
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug
log4j.logger.java.sql.Resultset=debug
log4j.logger.java.sql.Connection=debug
log4j.logger.java.sql.Statement=debug
log4j.logger.java.sql.Preparedstatement=debug
#log4j.logger.com.ibatis=DEBUG（显示所有数据库相关的运行过程日志）


# Disable verbose logging 关闭不必要的日志输出，即只保留 warn 级别的输出
log4j.logger.org.apache.shiro.util.ThreadContext=WARN
log4j.logger.org.apache.shiro.cache.ehcache.EhCache=WARN

# Console appender
# 另外如果输出时，不指定输出级别，则会输出全部类型的日志
log4j.appender.inLine=org.apache.log4j.ConsoleAppender
log4j.appender.inLine.Threshold=DEBUG
log4j.appender.inLine.layout=org.apache.log4j.PatternLayout
log4j.appender.inLine.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] %-5p %m (%F:%L)%n

# debug appender
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Threshold=INFO
#log4j.appender.console.Target = System.out（输出系统运行的过程日志）
#log4j.appender.console.Threshold=TRACE（没用）
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] %-5p %t %m (%F:%L)%n
#log4j.appender.console.layout.ConversionPattern=%d %p [%c] - %m %n

#File appender
#RollingFileAppender：输出到文件，文件达到一定阈值时，自动备份日志文件;
#DailyRollingFileAppender：可定期备份日志文件，默认一天一个文件，也可设置为每分钟一个、每小时一个；
#WriterAppender：可自定义日志输出位置。

#log4j.appender.FILE=org.apache.log4j.RollingFileAppender
#log4j.appender.FILE.MaxFileSize=50MB
# 保存备份日志的最大个数，默认值是：1
#log4j.appender.FILE.MaxBackupIndex=10
#log4j.appender.FILE.File=${catalina.base}/logs/log.log
#log4j.appender.FILE.Append=true
#log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
#log4j.appender.FILE.layout.ConversionPattern=[%d{yyyy-MM-dd HH\:mm\:ss}] %-5p %t %m (%F\:%L)%n